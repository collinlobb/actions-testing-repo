#https://www.linkedin.com/pulse/how-promote-releases-between-gitops-environments-mattias-fjellstr%C3%B6m
name: Promote to production

on:
  pull_request:
    branches: [ main ]
    types:
      - closed
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  # https://github.com/marketplace/actions/changed-files
  changed_files:
    runs-on: ubuntu-latest  # windows-latest || macos-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      # Example 1
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v37
        
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        with:
           since_last_remote_commit: true 

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
          
  #promote:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v3
  #    - run: |
          # configure git client
          # git config --global user.email "<email address>"
          # git config --global user.name "Service Account"

          # create a new branch
          # git switch -c production/${{ github.sha }}

          # promote the change
          #cp app/environments/staging/version.yaml app/environments/production/version.yaml

          # push the change to the new branch
          #git add app/environments/production/version.yaml
          #git commit -m "Promote staging to production"
          #git push -u origin production/${{ github.sha }}          
      # - run: |
        #  gh pr create \
        #    -B main \
        #    -H production/${{ github.sha }} \
        #    --title "Promote staging to production" \
        #    --body "Automatically created by GHA"          
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
